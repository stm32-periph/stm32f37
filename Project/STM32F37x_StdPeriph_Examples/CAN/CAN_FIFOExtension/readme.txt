/**
  @page CAN_FIFOExtension CAN FIFO Extension example
  
  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    CAN/CAN_FIFOExtension/readme.txt 
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    20-September-2012
  * @brief   Description of the CAN FIFO Extension example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
  @endverbatim

@par Example Description 

This example shows how to manage both CAN FIFO as a single FIFO composed by 
6 mail boxes.

The CAN serial communication link is a bus to which a number of units may be
connected. This number has no theoretical limit. Practically the total number
of units will be limited by delay times and/or electrical loads on the bus line.

This program behaves as follows:
  - By Pressing on KEY Button : 6 messages are sent to the N eval boards 
    connected to the bus and the received messages are displayed on the LCD. 
  Each time a new 6 messages are sent.
    
@note This example is tested with a bus of 3 units. The same program example is 
      loaded in all units to send and receive frames.
@note Any unit in the CAN bus may play the role of sender (by pressing KEY button)
      or receiver.

The CAN is configured as follow:
    - Bit Rate   = 1 Mbit/s  
    - CAN Clock  = external clock (HSE)
    - ID Filter  = All identifiers are allowed
    - RTR = Data
    - DLC = 1 byte
    - Data: Led number that should be turned ON


@par Directory contents 

  - CAN/CAN_FIFOExtension/stm32f37x_conf.h    Library Configuration file
  - CAN/CAN_FIFOExtension/stm32f37x_it.c      Interrupt handlers
  - CAN/CAN_FIFOExtension/stm32f37x_it.h      Interrupt handlers header file
  - CAN/CAN_FIFOExtension/main.c              Main program
  - CAN/CAN_FIFOExtension/main.h              Main program header file
  - CAN/CAN_FIFOExtension/system_stm32f37x.c  STM32F37x system source file
  
@note The "system_stm32f37x.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F37x_Clock_Configuration_V1.0.0.xls" 
      provided with the AN4132 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32F37x Devices.
  
  - This example has been tested with STMicroelectronics STM32373C-EVAL (STM32F37x)
    evaluation board and can be easily tailored to any other supported device 
    and development board.

  - STM32373C-EVAL Set-up
    - Use LED1, LED2, LED3 and LED4 connected respectively to PC.00, PC.01, PC.02
      and PC.03 pins
    - Use KEY Push Button connected to PA02 
    - Connect a female/female CAN cable between at least 2 EVAL CAN connectors (CN5)
    - Make sure that the jumper JP2 is fitted.

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F37x_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
