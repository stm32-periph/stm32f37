/**
  @page I2C_TSENSOR Communication between I2C and STLM75 Temperature sensor
  
  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    I2C/I2C_TSENSOR/readme.txt 
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    20-September-2012
  * @brief   Description of the I2C TSENSOR example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
  @endverbatim

@par Example Description 

This example provides a description of how to use the I2C to communicate with 
an STLM75 (or a compatible device) I2C temperature sensor is mounted on the 
STM32373C-EVAL board and used to get instantaneous external temperature (-55°C to +125°C).
 
Thanks to STM32 I2C SMBus feature, we can easily monitor the temperature 
variations. This is managed by the SMBus Alert which is generating a dedicated 
interrupt informing the system that the temperature is out of the selected 
ranges.

The user can configure the TOS and THYS thanks to a dedicated define values in 
the code. By default TOS and THY are set in main.c file:
   #define TEMPERATURE_THYS 31
   #define TEMPERATURE_TOS 32

@par Directory contents 

  - I2C/I2C_TSENSOR/stm32f37x_conf.h    Library Configuration file
  - I2C/I2C_TSENSOR/stm32f37x_it.c      Interrupt handlers
  - I2C/I2C_TSENSOR/stm32f37x_it.h      Interrupt handlers header file
  - I2C/I2C_TSENSOR/main.c              Main program
  - I2C/I2C_TSENSOR/main.h              Main program header file   
  - I2C/I2C_TSENSOR/system_stm32f37x.c  STM32F37x system source file
  
@note The "system_stm32f37x.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F37x_Clock_Configuration_V1.0.0.xls" 
      provided with the AN4132 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32F37x Devices.
  
  - This example has been tested with STMicroelectronics STM32373C-EVAL (STM32F37x)
    evaluation board and can be easily tailored to any other supported device 
    and development board. 

  - STM32373C-EVAL Set-up
    - Make sure that JP4 and JP5 jumpers are fitted in position 1-2.
    
@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F37x_StdPeriph_Templates
 - Open your preferred toolchain
 - Add the following file the project source list
     - Utilities/STM32_EVAL/STM32373C_EVAL/stm32373c_eval_i2c_tsensor.c
 - Before building the project please make sure that "USE_DEFAULT_TIMEOUT_CALLBACK" 
   define is removed from Preprocessor defines under C/C++ compiler settings.  
 - Rebuild all files and load your image into target memory
 - Run the example

 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
