/**
  @page DMA_ADCToTIM3Transfer ADC DMA transfer to TIM3 example
  
  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    DMA/DMA_ADCToTIM3Transfer/readme.txt 
  * @author  MCD Application Team
  * @version V1.1.0
  * @date    22-December-2021
  * @brief   Description of the ADC DMA transfer to TIM3 example.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2012 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  @endverbatim

@par Example Description 

This example provides a description of how to use a DMA channel to transfer
continuously a data from a peripheral (ADC1) to another peripheral (TIM3) supporting
DMA transfer.
The ADC channel9 is configured to be converted continuously. 
TIM3_CH3 is configured to generate a PWM signal on its output.
The dedicated DMA1 channel3 is configured to transfer in circular mode the last ADC 
channel9 converted value to the TIM3_CCR3 register. The DMA channel request is driven
by the TIM3 update event. The duty cycle of TIM3_CH3 output signal is then changed
each time the input voltage value on ADC channel9 pin is modified.
The duty cycle variation can be visualized on oscilloscope on the TIM3_CH3 pin
PB.00 while changing the analog input on ADC channel9 using the potentiometer.
 

@par Directory contents 

  - DMA/DMA_ADCToTIM3Transfer/stm32f37x_conf.h    Library Configuration file
  - DMA/DMA_ADCToTIM3Transfer/stm32f37x_it.c      Interrupt handlers
  - DMA/DMA_ADCToTIM3Transfer/stm32f37x_it.h      Interrupt handlers header file
  - DMA/DMA_ADCToTIM3Transfer/main.c              Main program
  - DMA/DMA_ADCToTIM3Transfer/system_stm32f37x.c  STM32F37x system source file
  
@note The "system_stm32f37x.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F37x_Clock_Configuration_V1.1.0.xls" 
      provided with the AN4132 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32F37x Devices.
  
  - This example has been tested with STMicroelectronics STM32373C-EVAL (STM32F37x)
    evaluation board and can be easily tailored to any other supported device 
    and development board.

  - STM32373C-EVAL Set-up
     - Make sure that the jumper JP16 is fitted.

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F37x_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

 
 */
