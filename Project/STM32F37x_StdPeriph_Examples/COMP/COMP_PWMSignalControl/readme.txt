/**
  @page COMP_PWMSignalControl COMP1 PWM signal control example
  
  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    COMP/COMP_PWMSignalControl/readme.txt 
  * @author  MCD Application Team
  * @version V1.1.0
  * @date    22-December-2021
  * @brief   Description of the COMP1 PWM signal control example.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2012 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  @endverbatim

@par Example Description 

This example shows how to configure COMP1 peripheral to hold on safe state
(low level) TIM15 channels as soon as COMP1 output is set at high level.

  - COMP1 is configured as follow:
     - Inverting input is internally connected to VREFINT = 1.22V
     - Non Inverting input is connected to PA1
     - Output is internally connected to TIM15 BKIN (Break Input)

  - TIM15CLK is set to 72 MHz, the TIM15 Prescaler is equal to 0 so the TIM15 counter
    clock used is 72 MHz.
    TIM15 frequency is defined as follow:
    TIM15 channels frequency = TIM15 counter clock / (Period + 1) 
                            = 72000000 /(100 + 1) 
                            = 713 KHz.

  - External voltage should be connected to PA.01 (RV3 potentiometer can be used).

  - Connect an oscilloscope to TIM15 channel PA.02 to display waveform. 

  - While PA.01 is lower than VREFINT (1.22V), PWM signal is displayed on PA.02.
    While PA.01 is higher than VREFINT, PA.02 is in low level.
 
 

@par Directory contents 

  - COMP/COMP_PWMSignalControl/stm32f37x_conf.h    Library Configuration file
  - COMP/COMP_PWMSignalControl/stm32f37x_it.c      Interrupt handlers
  - COMP/COMP_PWMSignalControl/stm32f37x_it.h      Interrupt handlers header file
  - COMP/COMP_PWMSignalControl/main.c              Main program
  - COMP/COMP_PWMSignalControl/system_stm32f37x.c  STM32F37x system source file
  
@note The "system_stm32f37x.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F37x_Clock_Configuration_V1.1.0.xls" 
      provided with the AN4132 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32F37x Devices.
  
  - This example has been tested with STMicroelectronics STM32373C-EVAL (STM32F37x)
    evaluation board and can be easily tailored to any other supported device 
    and development board.

  - STM32373C-EVAL Set-up
    - RV3 Potentiometer connected to PB.01 pin.
    - Connect PA.01 to PB.01 pin using a wire.
    - Connect an oscilloscope to PA.02 pin to display waveform.
    - Make sure that jumper JP16 is fitted.

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F37x_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

 
 */
