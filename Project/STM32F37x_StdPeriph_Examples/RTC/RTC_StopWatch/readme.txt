/**
  @page RTC_StopWatch RTC StopWatch Example
  
  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    RTC/RTC_StopWatch/readme.txt 
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    20-September-2012
  * @brief   RTC StopWatch Example description.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
  @endverbatim

@par Example Description 

  This example illustrates how to simulate a precise chronometer
  with 5 record times possibilities stored in the Backup registers (5 registers
  for time (second, minutes and hours) and 5 registers for subsecond).
  
  For this example an interactive human interface is developed using
  LCD and Push Buttons to allow user to use StopWatch with real time display.

  After startup, a default 00:00:00:000 chronometer counter is displayed on the 
  LCD, it corresponds to [Hours]:[minutes]:[seconds]:[milliseconds].
  User can manipulate the chronometer features using Joystick LEFT, RIGHT and Tamper buttons:
    - press Joystick LEFT  button to start counter.
    - press Joystick RIGHT button to save trials in the backup registers (max 5 actions).
    - press and hold Tamper button for 1 sec to reset all the backup registers.
 

@par Directory contents 

  - RTC/RTC_StopWatch/stm32f37x_conf.h    Library Configuration file
  - RTC/RTC_StopWatch/stm32f37x_it.c      Interrupt handlers
  - RTC/RTC_StopWatch/stm32f37x_it.h      Interrupt handlers header file
  - RTC/RTC_StopWatch/main.c              Main program
  - RTC/RTC_StopWatch/main.h              Main program header file
  - RTC/RTC_StopWatch/system_stm32f37x.c  STM32F37x system source file
  
@note The "system_stm32f37x.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F37x_Clock_Configuration_V1.0.0.xls" 
      provided with the AN4132 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32F37x Devices.
  
  - This example has been tested with STMicroelectronics STM32373C-EVAL (STM32F37x)
    evaluation board and can be easily tailored to any other supported device 
    and development board.

  - STM32373C-EVAL Set-up
    - Use the Tamper push-button connected to pin PA0
    - Use Joystick RIGHT button connected to pin PF9
    - Use Joystick LEFT button connected to pin PF4
    
@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F37x_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
